{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_KEY = '50340161-8d0ce27979907a55c95fc2abe';\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\n\r\nexport async function getImagesByQuery(query) {\r\n  const params = {\r\n    key: API_KEY,\r\n    q: query,\r\n    image_type: 'photo',\r\n    orientation: 'horizontal',\r\n    safesearch: true,\r\n  };\r\n\r\n  try {\r\n    const response = await axios.get(BASE_URL, { params });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Failed to fetch images: ' + error.message);\r\n  }\r\n}","import SimpleLightbox from 'simplelightbox';\r\nimport 'simplelightbox/dist/simple-lightbox.min.css';\r\n\r\nconst galleryContainer = document.querySelector('.gallery');\r\nconst loader = document.querySelector('#loaderBox');\r\n\r\nconst lightbox = new SimpleLightbox('.gallery a');\r\n\r\nexport function createGallery(images) {\r\n  const markup = images\r\n  .map(\r\n    image => `\r\n    <li class=\"gallery-item\">\r\n      <a class=\"gallery-link\" href=\"${image.largeImageURL}\">\r\n        <img class=\"gallery-image\" src=\"${image.webformatURL}\" alt=\"${image.tags}\" />\r\n      </a>\r\n      <div class=\"image-details\">\r\n        <div class=\"info-titles\">\r\n          <span>Likes</span>\r\n          <span>Views</span>\r\n          <span>Comments</span>\r\n          <span>Downloads</span>\r\n        </div>\r\n        <div class=\"info-values\">\r\n          <span>${image.likes}</span>\r\n          <span>${image.views}</span>\r\n          <span>${image.comments}</span>\r\n          <span>${image.downloads}</span>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  `\r\n  )\r\n  .join('');\r\n\r\n  galleryContainer.insertAdjacentHTML('beforeend', markup);\r\n  lightbox.refresh();\r\n}\r\n\r\nexport function clearGallery() {\r\n  galleryContainer.innerHTML = '';\r\n}\r\n\r\nexport function showLoader() {\r\n  loader.classList.add('is-visible');\r\n}\r\n\r\nexport function hideLoader() {\r\n  loader.classList.remove('is-visible');\r\n}","import { getImagesByQuery } from './js/pixabay-api.js';\r\nimport {\r\n  createGallery,\r\n  clearGallery,\r\n  showLoader,\r\n  hideLoader\r\n} from './js/render-functions.js';\r\n\r\nconst form = document.querySelector('.form');\r\nconst input = form.querySelector('.search-input');\r\n\r\nconst errorContainer = document.getElementById('errorBox'); // div для помилок\r\nconst loadingContainer = document.getElementById('loaderBox'); // div для лоадера\r\n\r\nform.addEventListener('submit', async event => {\r\n  event.preventDefault();\r\n\r\n  hideError(); // ховаємо попередню помилку\r\n\r\n  const query = input.value.trim();\r\n  if (!query) {\r\n    showError('Please enter a search term.');\r\n    return;\r\n  }\r\n\r\n  clearGallery();\r\n  showLoader();\r\n\r\n  try {\r\n    const data = await getImagesByQuery(query);\r\n\r\n    if (data.hits.length === 0) {\r\n      showError('Sorry, there are no images matching your search query. Please, try again!');\r\n    } else {\r\n      createGallery(data.hits);\r\n    }\r\n  } catch (error) {\r\n    showError(error.message);\r\n  } finally {\r\n    hideLoader();\r\n  }\r\n});\r\n\r\nfunction showError(message) {\r\n  errorContainer.style.display = 'block';\r\n  errorContainer.innerHTML = `\r\n    <div class=\"error-content\">\r\n      <svg class=\"icon-error\" width=\"24\" height=\"24\">\r\n        <use href=\"./img/symbol-defs.svg#icon-Group\"></use>\r\n      </svg>\r\n      <span>${message}</span>\r\n      <button class=\"error-close\" aria-label=\"Close error message\">\r\n        <svg class=\"icon-close\" width=\"16\" height=\"16\">\r\n          <use href=\"./img/symbol-defs.svg#icon-bi_x-lg\"></use>\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  `;\r\n\r\n  const closeBtn = errorContainer.querySelector('.error-close');\r\n  closeBtn.addEventListener('click', () => {\r\n    hideError();\r\n  });\r\n}\r\n\r\nfunction hideError() {\r\n  errorContainer.style.display = 'none';\r\n  errorContainer.innerHTML = '';\r\n}"],"names":["API_KEY","BASE_URL","getImagesByQuery","query","params","axios","error","galleryContainer","loader","lightbox","SimpleLightbox","createGallery","images","markup","image","clearGallery","showLoader","hideLoader","form","input","errorContainer","event","hideError","showError","data","message"],"mappings":"6vBAEA,MAAMA,EAAU,qCACVC,EAAW,2BAEV,eAAeC,EAAiBC,EAAO,CAC5C,MAAMC,EAAS,CACb,IAAKJ,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EAChB,EAEE,GAAI,CAEF,OADiB,MAAME,EAAM,IAAIJ,EAAU,CAAE,OAAAG,CAAM,CAAE,GACrC,IACjB,OAAQE,EAAO,CACd,MAAM,IAAI,MAAM,2BAA6BA,EAAM,OAAO,CAC3D,CACH,CCjBA,MAAMC,EAAmB,SAAS,cAAc,UAAU,EACpDC,EAAS,SAAS,cAAc,YAAY,EAE5CC,EAAW,IAAIC,EAAe,YAAY,EAEzC,SAASC,EAAcC,EAAQ,CACpC,MAAMC,EAASD,EACd,IACCE,GAAS;AAAA;AAAA,sCAEyBA,EAAM,aAAa;AAAA,0CACfA,EAAM,YAAY,UAAUA,EAAM,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAU9DA,EAAM,KAAK;AAAA,kBACXA,EAAM,KAAK;AAAA,kBACXA,EAAM,QAAQ;AAAA,kBACdA,EAAM,SAAS;AAAA;AAAA;AAAA;AAAA,GAK9B,EACA,KAAK,EAAE,EAERP,EAAiB,mBAAmB,YAAaM,CAAM,EACvDJ,EAAS,QAAO,CAClB,CAEO,SAASM,GAAe,CAC7BR,EAAiB,UAAY,EAC/B,CAEO,SAASS,GAAa,CAC3BR,EAAO,UAAU,IAAI,YAAY,CACnC,CAEO,SAASS,GAAa,CAC3BT,EAAO,UAAU,OAAO,YAAY,CACtC,CCzCA,MAAMU,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAQD,EAAK,cAAc,eAAe,EAE1CE,EAAiB,SAAS,eAAe,UAAU,EAChC,SAAS,eAAe,WAAW,EAE5DF,EAAK,iBAAiB,SAAU,MAAMG,GAAS,CAC7CA,EAAM,eAAc,EAEpBC,IAEA,MAAMnB,EAAQgB,EAAM,MAAM,KAAI,EAC9B,GAAI,CAAChB,EAAO,CACVoB,EAAU,6BAA6B,EACvC,MACD,CAEDR,IACAC,IAEA,GAAI,CACF,MAAMQ,EAAO,MAAMtB,EAAiBC,CAAK,EAErCqB,EAAK,KAAK,SAAW,EACvBD,EAAU,2EAA2E,EAErFZ,EAAca,EAAK,IAAI,CAE1B,OAAQlB,EAAO,CACdiB,EAAUjB,EAAM,OAAO,CAC3B,QAAY,CACRW,GACD,CACH,CAAC,EAED,SAASM,EAAUE,EAAS,CAC1BL,EAAe,MAAM,QAAU,QAC/BA,EAAe,UAAY;AAAA;AAAA;AAAA;AAAA;AAAA,cAKfK,CAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASFL,EAAe,cAAc,cAAc,EACnD,iBAAiB,QAAS,IAAM,CACvCE,GACJ,CAAG,CACH,CAEA,SAASA,GAAY,CACnBF,EAAe,MAAM,QAAU,OAC/BA,EAAe,UAAY,EAC7B"}